# This is a basic workflow to help you get started with Actions

name: listing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  show_list:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      ## CACHE THE RMARDDOWN AND R DEVTOOLS
      ### CONDITIONALLY R BASE AND PACKS INSTALL
      - name: Cache rlang packs
        id: rcache
        uses: actions/cache@v4
        with:
          path: rcache
          key: ${{ runner.os }}-rcache

      - name: only when no cache rbase and cran
        if: steps.rcache.outputs.cache-hit != 'true'
      ## HUGODOWN DEVTOOLS ONE-LINER
        run: |
          sudo apt-get install -y r-base && echo $(date)__rbase__ >> zsuccess.z
          sudo apt-get install -y r-cran-devtools r-cran-rmarkdown  && echo $(date)__rcran__ >> zsuccess.z
          ## hugodown missing dependencies
          sudo apt-get install -y r-cran-downlit
          sudo apt-get install -y r-cran-rcpptoml
          sudo apt-get install -y r-cran-usethis
          sudo apt-get install -y r-cran-whisker
          sudo apt-get install -y r-cran-whoami
          #R -e 'devtools::install_github("r-lib/hugodown")' && echo $(date)__SUCCESS_HUGODOWN__ >> zsuccess.z

      ## HUGODOWN INSTALL VIA R CMD
      - name: r_cmd hugodown install
        run: |
          sudo apt-get install git
          git clone https://github.com/r-lib/hugodown.git
          R CMD INSTALL hugodown/ 2> zerror.z
          rm -r hugodown/

      - name: render hugodown
        run: Rscript -e "rmarkdown::render('index.Rmd')"

      # Runs a set of commands using the runners shell
      - name: multi_line
        run: |
          echo _showing_list
          ls -al
          echo _s_working_dir_
          pwd
      ## commit output files
      - name: Commit results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add *.*
          git commit -m 'zData updated' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
